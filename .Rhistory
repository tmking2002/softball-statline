selected_columns <- hitting_stats_2024[, c("ab", "h", "x2b", "x3b", "hr", "rbi", "r", "bb", "hbp", "k", "sb", "cs", "avg", "obp", "ops")]
k <- 5  # Example: You can replace this with the chosen number of clusters
kmeans_result <- kmeans(selected_columns, centers = k)
hitting_stats_2024 <- read_csv("~/Projects/softball-statline/teams/data/hitting_stats/hitting_stats_2024.csv")
hitting_stats_2024 <- hitting_stats_2024  %>%
filter(ab > 30) %>%
mutate(across(7:17, ~.x/ab))
selected_columns <- hitting_stats_2024[, c("ab", "h", "x2b", "x3b", "hr", "rbi", "r", "bb", "hbp", "k", "sb", "cs", "avg", "obp", "ops")]
k <- 5  # Example: You can replace this with the chosen number of clusters
kmeans_result <- kmeans(selected_columns, centers = k)
# Cluster centers
kmeans_result$centers
# Cluster membership
kmeans_result$cluster
hitting_stats_2024$cluster <- kmeans_result$cluster
avg_by_cluster <- hitting_stats_2024 %>%
group_by(cluster) %>%
summarise(across(is.numeric, mean))
selected_columns <- hitting_stats_2024[, c("h", "x2b", "x3b", "hr", "rbi", "r", "bb", "hbp", "k", "sb", "cs", "avg", "obp", "ops")]
k <- 5  # Example: You can replace this with the chosen number of clusters
kmeans_result <- kmeans(selected_columns, centers = k)
# Cluster centers
kmeans_result$centers
# Cluster membership
kmeans_result$cluster
hitting_stats_2024$cluster <- kmeans_result$cluster
avg_by_cluster <- hitting_stats_2024 %>%
group_by(cluster) %>%
summarise(across(is.numeric, mean))
hitting_stats_2024 %>% filter(team_id == 255)
hitting_stats_2024 %>% filter(team_id == 255) %>% select(player, cluster)
library(readr)
X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech <- read_csv("Downloads/04_11_2024 3_45_03 PM-Georgia Tech@Georgia Tech.csv")
View(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech)
library(readr)
X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech <- read_csv("Downloads/04_11_2024 3_45_03 PM-Georgia Tech@Georgia Tech.csv")
View(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech)
ggplot(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point
ggplot(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point()
ggplot(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point() +
facet_wrap(~Pitcher)
ggplot(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(size = 5) +
facet_wrap(~Pitcher)
ggplot(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(size = 3) +
facet_wrap(~Pitcher)
ggplot(X04_11_2024_3_45_03_PM_Georgia_Tech_Georgia_Tech, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(size = 3) +
facet_wrap(~Pitcher) +
geom_hline(yintercept =  0) +
geom_vline(xintercept = 0)
setwd("~/Projects/execution")
setwd("~/Projects/GT-Execution")
files <- list.files("data")
library(tidyverse)
data <- rbind(read_csv(files))
setwd("~/Projects/GT-Execution/data")
files <- list.files("")
files <- list.files()
data <- rbind(read_csv(files))
data <- bind_rows(read_csv(files))
cols <- names(read_csv(files[26]))
data <- rbind(read_csv(files) %>% `names<-`(cols))
library(tidyverse)
setwd("~/Projects/GT-Execution/data")
files <- list.files()
cols <- names(read_csv(files[26]))
data <- rbind(read_csv(files) %>% `names<-`(cols))
library(tidyverse)
setwd("~/Projects/GT-Execution/data")
files <- list.files()
# Read the first file to get column names
cols <- names(read_csv(files[1]))
# Read all files into a list
data_list <- lapply(files, function(file) {
read_csv(file) %>%
# Rename the column if it's not calledLoc
rename(calledLoc = ifelse("AutoPitchType" %in% names(.), "AutoPitchType", "calledLoc"))
})
# Bind the rows of the data frames
data <- bind_rows(data_list)
library(tidyverse)
setwd("~/Projects/GT-Execution/data")
files <- list.files()
cols <- names(read_csv(files[26]))
data <- rbind(read_csv(files) %>% `names<-`(cols))
library(tidyverse)
setwd("~/Projects/GT-Execution/data")
files <- list.files()
cols <- names(read_csv(files[26]))
data <- data.frame()
for(i in files){
data <- rbind(data, read_csv(i) %>% `names<-`(cols))
}
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(bip = PlayResult == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"))
unique(stats$hit)
unique(stats$PlayResult)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"))
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun")) %>%
filter(bip)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball") %>%
filter(bip) %>%
group_by(curve) %>%
summarise(avg = mean(hit))
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(curve) %>%
summarise(avg = mean(hit))
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(TaggedPitchType) %>%
summarise(avg = mean(hit))
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word, TaggedPitchType, 2)), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(TaggedPitchType) %>%
summarise(avg = mean(hit))
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word*TaggedPitchType, 2))), tolower(TaggedPitchType)),
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(TaggedPitchType) %>%
summarise(avg = mean(hit))
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(cuve) %>%
summarise(avg = mean(hit))
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "Curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(curve) %>%
summarise(avg = mean(hit))
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(curve) %>%
summarise(avg = mean(hit))
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve)) %>%
filter(bip) %>%
group_by(curve) %>%
summarise(avg = mean(hit),
count = n())
View(data)
curve_prev = ifelse(lag(Batter) == Batter, lag(curve), NA) %>%
group_by(curve, curve_prev) %>%
View(stats)
curve_prev = ifelse(lag(Batter) == Batter, lag(curve), NA) %>%
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
curve_prev = ifelse(lag(Batter) == Batter, lag(curve), NA)) %>%
filter(bip) %>%
group_by(curve, curve_prev) %>%
summarise(avg = mean(hit),
count = n())
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
curve_prev = ifelse(lag(Batter) == Batter, lag(curve), NA)) %>%
filter(bip) %>%
group_by(curve, curve_prev) %>%
summarise(avg = mean(hit),
count = n())
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
prev = ifelse(lag(Batter) == Batter, lag(TaggedPitchType), NA)) %>%
filter(bip) %>%
group_by(curve, curve_prev) %>%
summarise(avg = mean(hit),
count = n())
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
prev = ifelse(lag(Batter) == Batter, lag(TaggedPitchType), NA)) %>%
filter(bip) %>%
group_by(curve, prev) %>%
summarise(avg = mean(hit),
count = n())
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
prev = ifelse(lag(Batter) == Batter, lag(TaggedPitchType), NA)) %>%
filter(bip) %>%
group_by(TaggedPitchType, prev) %>%
summarise(avg = mean(hit),
count = n())
View(stats)
stats <- data %>%
filter(Pitcher == "Chandler Dennis") %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
prev = ifelse(lag(Batter) == Batter, lag(TaggedPitchType), NA)) %>%
filter(bip) %>%
group_by(TaggedPitchType, prev) %>%
summarise(avg = mean(hit),
count = n()) %>%
filter(count >= 5)
View(stats)
stats <- data %>%
mutate(TaggedPitchType = ifelse(str_detect(TaggedPitchType, " "), paste0(tolower(word(TaggedPitchType, 1)), tolower(word(TaggedPitchType, 2))), tolower(TaggedPitchType)),
bip = PitchCall == "InPlay",
hit = PlayResult %in% c("Single", "Double", "Triple", "HomeRun"),
curve = TaggedPitchType == "curveball",
curve = ifelse(is.na(curve), FALSE, curve),
prev = ifelse(lag(Batter) == Batter, lag(TaggedPitchType), NA)) %>%
filter(bip) %>%
group_by(TaggedPitchType, prev) %>%
summarise(avg = mean(hit),
count = n()) %>%
filter(count >= 5)
if (!require("tidyverse", character.only = TRUE)) {
install.packages("tidyverse")
}
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
library(tidyverse)
print("CONF STANDINGS")
cur_season <- 2024
info <- try(readRDS(url("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_team_info.RDS")), silent = TRUE)
team_ids <- read_csv("teams/data/all_teams.csv") %>%
select(team_name, team_id)
conferences <- info %>%
filter(season == cur_season & division == "D-I") %>%
distinct(team_name, conference)
setwd("~/Projects/softball-statline")
team_ids <- read_csv("teams/data/all_teams.csv") %>%
select(team_name, team_id)
conferences <- info %>%
filter(season == cur_season & division == "D-I") %>%
distinct(team_name, conference)
View(conferences)
conferences <- info %>%
filter(season == cur_season & division == "D-I") %>%
distinct(team_name, conference) %>%
mutate(conference = ifelse(conference == "CUSA", "C-USA", conference))
View(team_ids)
View(conferences)
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
filter(home_team != away_team) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T) %>%
rename(home_conference = conference) %>%
merge(conferences, by.x = "away_team", by.y = "team_name", all = T) %>%
rename(away_conference = conference) %>%
drop_na(home_conference, away_conference) %>%
filter(home_conference == away_conference &
anytime::anydate(game_date) < "2024-05-10")
total_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'"))
team1_scoreboard <- total_scoreboard[c(9,1,4,5,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- total_scoreboard[c(9,5,8,1,4)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
total_records <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs) %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
win_perc = (W + T / 2) / (W + L + T),
record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
arrange(desc(win_perc)) %>%
select(team_name, win_perc, record)
create_standings <- function(conference){
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
if(nrow(scoreboard) != 0){
team1_scoreboard <- scoreboard[c(9,1,5,2,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- scoreboard[c(9,2,8,1,5)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
scoreboard_upd <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs)
standings <- scoreboard_upd %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
conf_win_perc = (W + T / 2) / (W + L + T),
conf_record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
merge(total_records, by = "team_name") %>%
arrange(-conf_win_perc, -win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
} else{
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
}
standings <- standings %>%
arrange(-win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
}
return(standings)
}
for(i in 1:length(unique(conferences$conference))){
conf <- unique(conferences$conference)[i]
standings <- create_standings(conf)
write_csv(standings, file = paste0("conf_standings/",conf,".csv"))
print(i)
}
if (!require("tidyverse", character.only = TRUE)) {
install.packages("tidyverse")
}
library(tidyverse)
print("CONF STANDINGS")
cur_season <- 2024
info <- try(readRDS(url("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_team_info.RDS")), silent = TRUE)
team_ids <- read_csv("teams/data/all_teams.csv") %>%
select(team_name, team_id)
conferences <- info %>%
filter(season == cur_season & division == "D-I") %>%
distinct(team_name, conference) %>%
mutate(conference = ifelse(conference == "CUSA", "C-USA", conference))
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
filter(home_team != away_team) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T) %>%
rename(home_conference = conference) %>%
merge(conferences, by.x = "away_team", by.y = "team_name", all = T) %>%
rename(away_conference = conference) %>%
drop_na(home_conference, away_conference) %>%
filter(home_conference == away_conference &
anytime::anydate(game_date) < "2024-05-10")
total_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'"))
team1_scoreboard <- total_scoreboard[c(9,1,4,5,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- total_scoreboard[c(9,5,8,1,4)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
total_records <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs) %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
win_perc = (W + T / 2) / (W + L + T),
record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
arrange(desc(win_perc)) %>%
select(team_name, win_perc, record)
create_standings <- function(conference){
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
if(nrow(scoreboard) != 0){
team1_scoreboard <- scoreboard[c(9,1,5,2,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- scoreboard[c(9,2,8,1,5)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
scoreboard_upd <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs)
standings <- scoreboard_upd %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
conf_win_perc = (W + T / 2) / (W + L + T),
conf_record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
merge(total_records, by = "team_name") %>%
arrange(-conf_win_perc, -win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
} else{
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
}
standings <- standings %>%
arrange(-win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
}
return(standings)
}
for(i in 1:length(unique(conferences$conference))){
conf <- unique(conferences$conference)[i]
standings <- create_standings(conf)
write_csv(standings, file = paste0("conf_standings/",conf,".csv"))
print(i)
}
