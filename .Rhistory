across(
.cols = c(home_team, away_team),
.fns = \(col) str_replace(col, "&amp;", "&")
),
across(
.cols = c(home_team, away_team),
.fns = \(col) str_replace(col, "&#39;", "'")
),
across(
.cols = c(home_team, away_team),
.fns = \(col) str_remove_all(col, "Fairleigh ")
)
) %>%
merge(team_ids %>% `names<-`(c("away_team", "away_team_id")), by = "away_team", all = TRUE) %>%
merge(team_ids %>% `names<-`(c("home_team", "home_team_id")), by = "home_team", all = TRUE) %>%
drop_na() %>%
select(away_team, away_team_id, away_team_logo, away_team_runs, home_team, home_team_id, home_team_logo, home_team_runs, game_date, game_id, status)
team_ids <- read_csv("teams/data/all_teams.csv") %>%
select(team_name, team_id)
setwd("~/Projectts/softball-statline")
setwd("~/Projects/softball-statline")
team_ids <- read_csv("teams/data/all_teams.csv") %>%
select(team_name, team_id)
scoreboard_d1 <- scoreboard_d1 %>%
select(-c(home_team_id, away_team_id)) %>%
mutate(
across(
.cols = c(home_team, away_team),
.fns = \(col) str_replace(col, "&amp;", "&")
),
across(
.cols = c(home_team, away_team),
.fns = \(col) str_replace(col, "&#39;", "'")
),
across(
.cols = c(home_team, away_team),
.fns = \(col) str_remove_all(col, "Fairleigh ")
)
) %>%
merge(team_ids %>% `names<-`(c("away_team", "away_team_id")), by = "away_team", all = TRUE) %>%
merge(team_ids %>% `names<-`(c("home_team", "home_team_id")), by = "home_team", all = TRUE) %>%
drop_na() %>%
select(away_team, away_team_id, away_team_logo, away_team_runs, home_team, home_team_id, home_team_logo, home_team_runs, game_date, game_id, status)
i = days[1]
cur_games <- scoreboard_d1 %>%
filter(game_date == format(as.Date(i, origin = "1970-01-01"), "%m/%d/%Y"))
if(year(as.Date(i, origin = "1970-01-01")) == 2024){
cur_games <- cur_games %>%
left_join(rankings, by = c("home_team" = "Team")) %>%
rename(home_rank = Rank) %>%
left_join(rankings, by = c("away_team" = "Team")) %>%
rename(away_rank = Rank) %>%
mutate(home_rank = ifelse(is.na(home_rank), 26, home_rank),
away_rank = ifelse(is.na(away_rank), 26, away_rank)) %>%
rowwise() %>%
mutate(top_rank = min(c(home_rank, away_rank)),
home_team = ifelse(home_rank <= 25, paste0("#", home_rank, " ", home_team), home_team),
away_team = ifelse(away_rank <= 25, paste0("#", away_rank, " ", away_team), away_team)) %>%
arrange(top_rank) %>%
select(away_team, away_team_id, away_team_logo, away_team_runs, home_team, home_team_id, home_team_logo, home_team_runs, game_date, game_id, status)
}
rankings <- "https://nfca.org/component/com_nfca/Itemid,230/list,1/pdiv,div1/top25,1/year,2024/" %>%
read_html() %>%
html_table() %>%
extract2(1) %>%
mutate(Team = str_extract(Team, "\\w+(?: \\w+)?"),
Team = str_replace(Team, "State", "St.")) %>%
left_join(team_ids, by = c("Team" = "team_name")) %>%
select(Team, Rank) %>%
`names<-`(c("Team", "Rank"))
View(rankings)
cur_games <- scoreboard_d1 %>%
filter(game_date == format(as.Date(i, origin = "1970-01-01"), "%m/%d/%Y"))
if(year(as.Date(i, origin = "1970-01-01")) == 2024){
cur_games <- cur_games %>%
left_join(rankings, by = c("home_team" = "Team")) %>%
rename(home_rank = Rank) %>%
left_join(rankings, by = c("away_team" = "Team")) %>%
rename(away_rank = Rank) %>%
mutate(home_rank = ifelse(is.na(home_rank), 26, home_rank),
away_rank = ifelse(is.na(away_rank), 26, away_rank)) %>%
rowwise() %>%
mutate(top_rank = min(c(home_rank, away_rank)),
home_team = ifelse(home_rank <= 25, paste0("#", home_rank, " ", home_team), home_team),
away_team = ifelse(away_rank <= 25, paste0("#", away_rank, " ", away_team), away_team)) %>%
arrange(top_rank) %>%
select(away_team, away_team_id, away_team_logo, away_team_runs, home_team, home_team_id, home_team_logo, home_team_runs, game_date, game_id, status)
}
View(cur_games)
if(!is.null(nrow(cur_games))){
cur_games <- cur_games %>%
mutate(game_date = substr(game_date, 1, 10))
}
write.csv(cur_games, paste0("schedule/schedule_data/d1/", as.Date(i, origin = "1970-01-01"), ".csv"))
library(tidyverse)
cur_season <- 2024
info <- try(readRDS(url("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_team_info.RDS")), silent = TRUE)
team_ids <- read_csv("teams/data/all_teams.csv") %>%
select(team_name, team_id)
conferences <- info %>%
filter(season == cur_season & division == "D-I") %>%
distinct(team_name, conference)
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T) %>%
rename(home_conference = conference) %>%
merge(conferences, by.x = "away_team", by.y = "team_name", all = T) %>%
rename(away_conference = conference) %>%
drop_na(home_conference, away_conference) %>%
filter(home_conference == away_conference &
anytime::anydate(game_date) < "2023-05-10")
total_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'"))
team1_scoreboard <- total_scoreboard[c(9,1,4,5,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- total_scoreboard[c(9,5,8,1,4)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
total_records <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs) %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
win_perc = (W + T / 2) / (W + L + T),
record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
arrange(desc(win_perc)) %>%
select(team_name, win_perc, record)
create_standings <- function(conference){
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
team1_scoreboard <- scoreboard[c(9,1,5,2,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- scoreboard[c(9,2,8,1,5)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
scoreboard_upd <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs)
standings <- scoreboard_upd %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
conf_win_perc = (W + T / 2) / (W + L + T),
conf_record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
merge(total_records, by = "team_name") %>%
arrange(-conf_win_perc, -win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
scoreboard <- total_scoreboard
return(standings)
}
for(i in 1:length(unique(conf_scoreboard$home_conference))){
conf <- unique(conf_scoreboard$home_conference)[i]
standings <- create_standings(conf)
write_csv(standings, file = paste0("conf_standings/",conf,".csv"))
print(i)
}
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team)
View(conferences)
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T)
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T) %>%
rename(home_conference = conference) %>%
merge(conferences, by.x = "away_team", by.y = "team_name", all = T)
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T) %>%
rename(home_conference = conference) %>%
merge(conferences, by.x = "away_team", by.y = "team_name", all = T) %>%
rename(away_conference = conference) %>%
drop_na(home_conference, away_conference)
conf_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'")) %>%
merge(conferences, by.x = "home_team", by.y = "team_name", all = T) %>%
rename(home_conference = conference) %>%
merge(conferences, by.x = "away_team", by.y = "team_name", all = T) %>%
rename(away_conference = conference) %>%
drop_na(home_conference, away_conference) %>%
filter(home_conference == away_conference &
anytime::anydate(game_date) < "2024-05-10")
total_scoreboard <- try(readRDS(url(glue::glue("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_scoreboard_{cur_season}.RDS"))), silent = TRUE) %>%
drop_na(home_team, away_team) %>%
mutate(home_team = str_replace(home_team, "&amp;", "&"),
away_team = str_replace(away_team, "&amp;", "&"),
home_team = str_replace(home_team, "&#39;", "'"),
away_team = str_replace(away_team, "&#39;", "'"))
team1_scoreboard <- total_scoreboard[c(9,1,4,5,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- total_scoreboard[c(9,5,8,1,4)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
total_records <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs) %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
win_perc = (W + T / 2) / (W + L + T),
record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
arrange(desc(win_perc)) %>%
select(team_name, win_perc, record)
View(total_records)
create_standings <- function(conference){
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
team1_scoreboard <- scoreboard[c(9,1,5,2,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- scoreboard[c(9,2,8,1,5)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
scoreboard_upd <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs)
standings <- scoreboard_upd %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
conf_win_perc = (W + T / 2) / (W + L + T),
conf_record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
merge(total_records, by = "team_name") %>%
arrange(-conf_win_perc, -win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
scoreboard <- total_scoreboard
return(standings)
}
for(i in 1:length(unique(conferences$conference))){
conf <- unique(conf_scoreboard$home_conference)[i]
standings <- create_standings(conf)
write_csv(standings, file = paste0("conf_standings/",conf,".csv"))
print(i)
}
length(unique(conferences$conference))
for(i in 1:length(unique(conferences$conference))){
conf <- unique(conferences$conference)[i]
standings <- create_standings(conf)
write_csv(standings, file = paste0("conf_standings/",conf,".csv"))
print(i)
}
View(total_scoreboard)
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
team1_scoreboard <- scoreboard[c(9,1,5,2,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- scoreboard[c(9,2,8,1,5)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
View(total_records)
View(team_ids)
View(conferences)
conference <- "ACC"
teams <- conferences %>%
filter(conference == .env$conference)
teams <- conferences %>%
filter(conference == .env$conference) %>%
pull(team)
teams <- conferences %>%
filter(conference == .env$conference) %>%
pull(team_name)
View(total_records)
standings <- total_records %>%
filter(team_name %in% teams)
View(standings)
standings <- total_records %>%
filter(team_name %in% teams) %>%
merge(team_ids, by = "team_name")
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
merge(team_ids, by = "team_name")
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
merge(team_ids, by = "team_name")
merge(conferences, by = "conference") %>%
merge(team_ids, by = "team_name")
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
mutate(conference = .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference) %>%
merge(conferences, by = "conference") %>%
merge(team_ids, by = "team_name")
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference) %>%
merge(conferences, by = "conference") %>%
merge(team_ids, by = "team_name")
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference) %>%
merge(conferences, by = "conference")
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference)
View(teams)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference) %>%
merge(teams, by = "conference", all = T) %>%
merge(team_ids, by = "team_name")
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference) %>%
merge(teams, by = "conference", all = T)
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
mutate(conference = .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference) %>%
merge(team_ids, by = "team_name")
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
Conf = "0-0") %>%
merge(team_ids, by = "team_name")
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_records = "0-0") %>%
merge(team_ids, by = "team_name") %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name") %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
names(standings)
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = .env$conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
standings <- standings %>%
arrange(-conf_win_perc, win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
}
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = .env$conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
}
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
}
View(standings)
standings <- standings %>%
arrange(-conf_win_perc, win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
}
standings <- standings %>%
arrange(-win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
create_standings <- function(conference){
if(nrow(conf_scoreboard) != 0){
scoreboard <- conf_scoreboard %>%
filter(home_conference == conference)
team1_scoreboard <- scoreboard[c(9,1,5,2,8)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
team2_scoreboard <- scoreboard[c(9,2,8,1,5)] %>% `names<-`(c("date","team_name","runs","opponent_name","opponent_runs"))
scoreboard_upd <- rbind(team1_scoreboard, team2_scoreboard) %>%
mutate(result = case_when(runs > opponent_runs ~ "W",
runs < opponent_runs ~ "L",
runs == opponent_runs ~ "T")) %>%
drop_na(team_name, runs, opponent_runs)
standings <- scoreboard_upd %>%
group_by(team_name) %>%
summarise(W = sum(result == "W"),
L = sum(result == "L"),
T = sum(result == "T"),
conf_win_perc = (W + T / 2) / (W + L + T),
conf_record = paste(W, L, T, sep = "-")) %>%
merge(team_ids, by = "team_name") %>%
merge(total_records, by = "team_name") %>%
arrange(-conf_win_perc, -win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
} else{
teams <- conferences %>%
filter(conference == .env$conference)
standings <- total_records %>%
filter(team_name %in% teams$team_name) %>%
mutate(conference = .env$conference,
conf_record = "0-0") %>%
merge(team_ids, by = "team_name")
for(i in 1:nrow(teams)){
if(!(teams$team_name[i] %in% standings$team_name)){
standings <- rbind(standings, data.frame(team_name = teams$team_name[i], win_perc = 0, record = "0-0", conference = conference, conf_record = "0-0") %>% merge(team_ids, by = "team_name"))
}
}
standings <- standings %>%
arrange(-win_perc) %>%
select(team_name, conf_record, record, team_id) %>%
`names<-`(c("Team", "Conf", "Total", "Team ID"))
}
return(standings)
}
for(i in 1:length(unique(conferences$conference))){
conf <- unique(conferences$conference)[i]
standings <- create_standings(conf)
write_csv(standings, file = paste0("conf_standings/",conf,".csv"))
print(i)
}
library(tidyverse)
teams <- readRDS(url("https://github.com/sportsdataverse/softballR-data/raw/main/data/ncaa_team_info.RDS")) %>%
mutate(season = ifelse(season == 1900, 2000, season)) %>%
filter(wins < 80)
teams$ties[which(is.na(teams$ties))] <- 0
unique_teams <- teams %>%
filter(division != "") %>%
mutate(season = as.numeric(season)) %>%
drop_na(season) %>%
group_by(team_id) %>%
slice_max(season) %>%
distinct(team_name, team_id, division) %>%
arrange(division, team_name)
write.csv(unique_teams, "teams/data/all_teams.csv")
for(i in unique(unique_teams$team_id)){
team_info <- teams %>% filter(team_id == i) %>%
drop_na(wins, losses) %>%
mutate(record = paste(wins, losses, ties, sep = "-"),
win_perc = format(round(wins / (wins + losses), 3), nsmall = 3)) %>%
select(season, head_coach, conference, record, win_perc)
write.csv(team_info, paste0("teams/data/team_info/team_", i, ".csv"))
}
View(team_info)
View(teams)
ncaa_team_info <- readRDS("~/Projects/softballR-data/data/ncaa_team_info.RDS")
View(ncaa_team_info)
